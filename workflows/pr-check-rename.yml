name: PR check rename
run-name: PR check rename ${{github.run_number}}
on:
  #synchronize„ÅØpr„Å´Êñ∞„Åó„ÅÑ„Ç≥„Éü„ÉÉ„Éà„Ååpush„Åï„Çå„Åü„Å®„Åç„Å´Áô∫ÁÅ´
  #add_image„Éñ„É©„É≥„ÉÅ„Å´ÁîªÂÉè„ÅåËøΩÂä†„Åï„Çå„Åü„Å®„Åç„Å´Áô∫ÁÅ´
  pull_request:
    types: [ opened, synchronize, reopened ]
    branches:
      - master
      #„Éñ„É©„É≥„ÉÅÂÖà„ÅÆvalidation(master„Éñ„É©„É≥„ÉÅ„Å´„Éó„É´„É™„ÇØ„Åó„Åü„ÇâÁô∫Âãï)

jobs:
  check-rename:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    timeout-minutes: 2
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      # „Éû„Éº„Ç∏ÂÖÉ„ÅåÊ≠£„Åó„ÅÑ(add-image)„ÅãË™ø„Åπ„Çã
      - name: if correct Source Branch
        id: correct_branch
        if: startsWith(github.head_ref, 'add-image')
        run: echo "from add-image PR ok!‚úÖ"
      - name: else Source Branch
        if: steps.correct_branch.conclusion == 'skipped'
        run: |
          echo 'skipped'
          echo '::error::add-image„Éñ„É©„É≥„ÉÅ„Åã„ÇâÁîªÂÉè„ÇíËøΩÂä†„Åó„Å¶„Åè„Å†„Åï„ÅÑ'
          exit 1

      - name: ls1
        run: ls
      - name: show branch name
        run: echo "${{github.head_ref}}"

      # - run: echo "github context ${{toJson(github)}}"

      # file_blacklist.txt„Åß„Éï„Ç°„Ç§„É´„ÅÆÈô§Â§ñÂá¶ÁêÜ„ÇíË°å„Å£„Å¶„ÅÑ„Çã
      # [20230101]len()=8„Å´Âæì„Å£„Å¶„ÅÑ„Çã„ÅãÁ¢∫Ë™çÔºåÊã°ÂºµÂ≠ê„ÅØÁ¢∫Ë™ç„Åó„Å™„ÅÑ
      # if„ÅÆne(Êï∞Â≠óÊØîËºÉ)„ÅØÁ≠â„Åó„Åè„Å™„Åã„Å£„Åü„ÇâÁúü
      - name: üö®check file format
        run: |
          not_formated_file="$(find . -maxdepth 1 -type f | grep -v -f file_blacklist.txt | grep -v -E '^.\/[0-9]{7,8}.\w{3,4}')"
          echo -e "\e[34m${not_formated_file}\e[m"
          not_formated_file_len=($(echo "$not_formated_file" | grep . | wc -l))
          echo -e "\e[34m${not_formated_file_len}\e[m"

          if [ $not_formated_file_len -ne 0 ]; then
            echo "::error::[20230101]„ÅÆ„Çà„ÅÜ„Å™„Éï„Ç©„Éº„Éû„ÉÉ„Éà„Å´„Å™„Å£„Å¶„ÅÑ„Å™„ÅÑ„ÇÑ„Å§„Åå„ÅÇ„Çã"
            echo "::error::not formated file length: ${not_formated_file_len}"
            echo "::error::error files:"
            echo "::error::${not_formated_file}"
            exit 1
          else
            echo 'file check ok!'
          fi
        shell: bash -x {0}
      # Ê®ôÊ∫ñ„Åß„ÅØset -e„Åï„Çå„Å¶„Åä„ÇäÔºågrep„Åß‰∏ÄËá¥„Åó„Å™„Åã„Å£„Åü„Çâerror1„ÅåÂá∫„Çã„ÅÆ„ÅßÔºåe„ÇíÂ§ñ„Åô

      # Êã°ÂºµÂ≠ê„ÇíÂ§âÊõ¥„Åô„Çã
      # [20230101]„ÅÆ„Çà„ÅÜ„Å™„Éï„Ç©„Éº„Éû„ÉÉ„Éà„Å´Âæì„Å£„Åü.png‰ª•Â§ñ„ÅÆÊã°ÂºµÂ≠ê„Çípng„Å´„Åô„Çã
      # Â§âÊõ¥„Åô„ÇãÊã°ÂºµÂ≠ê„Åå„ÅÇ„Å£„ÅüÂ†¥ÂêàÔºåif„ÅßPR„Å´commit„Åô„Çã
      - name: ‚ôªchange filename ext
        id: ext
        run: |
          change_filename_ext="$(find . -type f | grep -E '^.\/[0-9]{7,8}.\w{3,4}' | grep -v ".png" | sed -E -e 'p;s/.\w{3,4}$/.png/' | xargs -n 2 echo)"
          echo -e "\e[34m${change_filename_ext}\e[m"
          change_filename_ext_len=($(echo "$change_filename_ext" | grep . | wc -l))
          echo -e "\e[34m${change_filename_ext_len}\e[m"

          echo "change_filename_ext_len2=$change_filename_ext_len" >> $GITHUB_ENV

          if [ $change_filename_ext_len -ne 0 ]; then
            find . -type f | grep -E '^.\/[0-9]{7,8}.\w{3,4}' | grep -v ".png" | sed -E -e 'p;s/.\w{3,4}$/.png/' | xargs -n 2 mv
          else
            echo "‚úÖfile ext check is OK!"
          fi

        shell: bash -x {0}

      - name: ls2
        run: ls

      - name: üöÄif rename; git push!
        run: |
          echo -e "\e[34m${{ env.change_filename_ext_len2 }}\e[m"
          if [ ${{ env.change_filename_ext_len2 }} -ne 0 ]; then
            echo "0„Åò„ÇÉ„Å™„ÅÑ"

            git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
            git config --global user.name "github-actions[bot]"
            git fetch
            git branch -a
            git checkout ${{github.head_ref}}
            git add .
            git commit -m "ü¶æauto renamefile (${{github.run_number}})"
            git push -u origin HEAD:${{github.head_ref}}
          else
            echo "‚úÖfile ext check is OK!"
          fi
